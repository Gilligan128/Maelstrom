@model System.Collections.IList
@{
    
    var properties = Model.Count > 0 ? ModelMetadata.FromLambdaExpression(m => m[0], ViewData).Properties : Enumerable.Empty<ModelMetadata>() ;
    var visibleProperties = properties.Where(p => p.PropertyName.ToLower() != "id");
}
<table>
    <tr>
        @foreach (var prop in visibleProperties)
        {
            <th>@prop.GetDisplayName()
            </th>
        }
    </tr>
    @for (int i = 0; i < Model.Count; i++)
    {
        var itemMD = ModelMetadata.FromLambdaExpression(m => m[i], ViewData);
        var idProp = itemMD.Properties.Single(p => p.PropertyName.ToLower() == "id");

        <tr>
            @foreach (var prop in visibleProperties)
            {
                <td>
                    @{ var propertyMetadata = itemMD.Properties
                        .Single(m => m.PropertyName == prop.PropertyName);
                    }
                    @Html.DisplayFor(m => propertyMetadata.Model)
                </td>
            }
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = idProp.Model })
            </td>
            <td>
                @using (Html.BeginForm("Delete", ViewContext.RouteData.Values["controller"].ToString(), new { id = idProp.Model}))
                {
                    <input type="submit" name="Delete" value="delete" onclick="return confirm('Are you sure you want to delete this?');"></input>
                }
            </td>
        </tr>
    }
</table>
